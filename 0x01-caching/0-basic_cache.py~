#!/usr/bin/env python3

11;rgb:0000/0000/0000
from base_caching import BaseCaching


class BasicCache(BaseCaching):
    """BasicCache implements a simple caching system with no limit.

    Inherits from BaseCaching and utilizes the provided cache_data dictionary.
    """
    def __init__(self):
        """Initialize the BasicCache object."""
        super().__init__()

    def put(self, key, item):
        """
        Adds an item to the cache.

        Args:
            key (str): The key to identify the cached item.
            item (any): The item to be cached.
        """
        if key is not None and item is not None:
            self.cache_data[key] = item


    def get(self, key):
        """
        Retrieves an item from the cache.

        Args:
            key (str): The key of the item to retrieve.

        Returns:
            any: The cached item, or None if not found.
        """
        return self.cache_data.get(key)
    
